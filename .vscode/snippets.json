{
  "Philippine CRM Component": {
    "prefix": "phcrm-component",
    "body": [
      "'use client'",
      "import { useState, useEffect } from 'react'",
      "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card'",
      "import { formatPHP, formatDate } from '@/lib/utils'",
      "",
      "interface ${1:ComponentName}Props {",
      "  // Props interface",
      "}",
      "",
      "export default function ${1:ComponentName}({ }: ${1:ComponentName}Props) {",
      "  const [loading, setLoading] = useState(false)",
      "",
      "  return (",
      "    <Card>",
      "      <CardHeader>",
      "        <CardTitle className=\"flex items-center\">",
      "          <span className=\"mr-2\">ðŸ‡µðŸ‡­</span>",
      "          ${2:Component Title}",
      "        </CardTitle>",
      "      </CardHeader>",
      "      <CardContent>",
      "        ${3:// Component content}",
      "      </CardContent>",
      "    </Card>",
      "  )",
      "}"
    ],
    "description": "Create a Philippine CRM component"
  },
  "Supabase Query": {
    "prefix": "phcrm-supabase",
    "body": [
      "const { data, error } = await supabase",
      "  .from('${1:table_name}')",
      "  .select('${2:*}')",
      "  .eq('organization_id', organization?.id)",
      "  ${3:// Additional filters}",
      "",
      "if (error) {",
      "  console.error('Error fetching ${1:table_name}:', error)",
      "  return",
      "}",
      "",
      "${4:// Process data}"
    ],
    "description": "Supabase query with organization filter"
  },
  "Philippine Currency Format": {
    "prefix": "phcrm-currency",
    "body": [
      "formatPHP(${1:amount}, { compact: ${2:false} })"
    ],
    "description": "Format Philippine peso currency"
  },
  "Philippine Date Format": {
    "prefix": "phcrm-date",
    "body": [
      "formatDate(${1:dateString}, { ${2:relative: true} })"
    ],
    "description": "Format date with Philippine context"
  },
  "Mobile Component": {
    "prefix": "phcrm-mobile",
    "body": [
      "'use client'",
      "import { useState, useEffect } from 'react'",
      "import { useSwipeable } from 'react-swipeable'",
      "",
      "export default function ${1:ComponentName}() {",
      "  const [isOnline, setIsOnline] = useState(navigator.onLine)",
      "",
      "  const swipeHandlers = useSwipeable({",
      "    onSwipedLeft: () => {",
      "      ${2:// Handle swipe left}",
      "    },",
      "    onSwipedRight: () => {",
      "      ${3:// Handle swipe right}",
      "    },",
      "    preventDefaultTouchmoveEvent: true,",
      "    trackMouse: true",
      "  })",
      "",
      "  return (",
      "    <div {...swipeHandlers} className=\"min-h-screen bg-gray-50\">",
      "      ${4:// Mobile component content}",
      "    </div>",
      "  )",
      "}"
    ],
    "description": "Create mobile-optimized component"
  },
  "Philippine Business Context": {
    "prefix": "phcrm-context",
    "body": [
      "// Philippine business context",
      "const philippineContext = {",
      "  relationship: '${1:new|developing|strong|champion}',",
      "  region: '${2:Metro Manila|Luzon|Visayas|Mindanao}',",
      "  businessType: '${3:sole_proprietorship|partnership|corporation|cooperative}',",
      "  culturalNotes: [",
      "    '${4:Face-to-face meetings preferred}',",
      "    '${5:Family decision involvement expected}'",
      "  ],",
      "  followUpRecommendation: '${6:Schedule merienda meeting}'",
      "}"
    ],
    "description": "Philippine business context object"
  },
  "Error Boundary": {
    "prefix": "phcrm-error",
    "body": [
      "try {",
      "  ${1:// Your code here}",
      "} catch (error) {",
      "  console.error('Philippine CRM Error:', error)",
      "  // Log to activity log",
      "  await supabase",
      "    .from('activity_log')",
      "    .insert([{",
      "      organization_id: organization?.id,",
      "      user_id: user?.id,",
      "      activity_type: 'error',",
      "      title: 'Application Error',",
      "      description: error.message,",
      "      metadata: { error: error.stack }",
      "    }])",
      "  ",
      "  ${2:// Handle error gracefully}",
      "}"
    ],
    "description": "Error handling with logging"
  },
  "Philippine Team Task": {
    "prefix": "phcrm-task",
    "body": [
      "const philippineTask = {",
      "  title: '${1:Task title}',",
      "  description: '${2:Task description}',",
      "  priority: '${3:low|medium|high|urgent}',",
      "  culturalContext: '${4:Consider Filipino business hours and holidays}',",
      "  followUpStyle: '${5:personal|formal|family_oriented}',",
      "  preferredTime: '${6:morning|afternoon|after_merienda}',",
      "  assignedTo: '${7:team_member}',",
      "  dueDate: '${8:YYYY-MM-DD}',",
      "  tags: ['${9:philippines}', '${10:relationship_building}']",
      "}"
    ],
    "description": "Philippine business task structure"
  }
}